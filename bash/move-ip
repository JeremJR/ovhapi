#!/bin/bash
CUR_DIR=$(basename $0)
API_OVH="https://eu.api.ovh.com"

[ -n "${1:-}" ] && METHOD="${1}" || end 1 "Missing method (GET|POST|...)"
[ -n "${2:-}" ] && QUERY="${2}" || end 1 "Missing query like /1.0/ip?type=failover"

# Application Key : must be set with AK environment variable.
# Application Secret : must be set with AS environment variable
# Consumer Key : if is unset by CK environment variable, it will be regenerate

trap end_of_script 1 2 3 6 9 14 15

end () {
  [ -n "${1:-}" ] && EXIT="${1}" || EXIT=0
  [ -n "${2:-}" ] && echo "$2" >&2
  exit $EXIT
}

CURL=$(which curl)
[ -x $CURL ] || end 1 "Missing curl binary"

JQ=$(which jq)
[ -x $JQ ] || end 1 "Missing jq binary"

# Time delta
DELTA=$(($(date +%s) - $($CURL -s $API_OVH/1.0/auth/time)))

if [ -z $CK ]
then
  AUTH=$($CURL -s -XPOST -H"X-Ovh-Application: $AK" -H "Content-type: application/json" \
         https://eu.api.ovh.com/1.0/auth/credential  \
         -d '{ "accessRules": [ { "method": "GET", "path": "/*" } ] }')
  CK=$(echo $AUTH| $JQ --raw-output .consumerKey)
  URL=$(echo $AUTH| $JQ --raw-output .validationUrl)
  echo "please visite $URL to validate this Consumer Key"
  echo "After you can use this Consumer Key with: CK=$CK"
  exit
fi

QUERY="$API_OVH$QUERY"
BODY=""
TSTAMP=$(($(date +%s) + $DELTA))

PRE=$AS"+"$CK"+"$METHOD"+"$QUERY"+"$BODY"+"$TSTAMP
SIGNATURE='$1$'$(echo -n $PRE | openssl dgst -sha1 -hex | cut -f 2 -d ' ' )

$CURL -H "X-Ovh-Application:$AK"      \
      -H "X-Ovh-Timestamp:$TSTAMP"    \
      -H "X-Ovh-Signature:$SIGNATURE" \
      -H "X-Ovh-Consumer:$CK"         \
      -s $QUERY | $JQ .

